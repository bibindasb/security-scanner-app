# Security Scanner Environment Configuration
# Copy this file to .env and update with your actual API keys

# Database Configuration
DATABASE_URL=postgresql://scanner:scanner@db:5432/security_scanner
REDIS_URL=redis://redis:6379/0

# Security Configuration
SECRET_KEY=your-secret-key-change-in-production
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# CORS Configuration
CORS_ORIGINS=["http://localhost:3000", "http://frontend:3000"]

# AI Provider API Keys
# Get your OpenRouter API key from: https://openrouter.ai/
# Sign up, go to Keys section, and create a new API key
OPENROUTE_API_KEY=sk-or-v1-your_actual_openrouter_api_key_here

# Get your Gemini API key from: https://makersuite.google.com/app/apikey
# Sign in with Google account, create a new API key
GEMINI_API_KEY=your_actual_gemini_api_key_here

# Get your OpenAI API key from: https://platform.openai.com/api-keys
# Sign up, go to API Keys section, and create a new secret key
OPENAI_API_KEY=sk-your_actual_openai_api_key_here

# Scanner Configuration
MAX_SCAN_DURATION=300
USER_AGENT=SecurityScanner/1.0

# Instructions:
# 1. Copy this file: cp .env.example .env
# 2. Edit .env and replace the placeholder values with your actual API keys
# 3. At least one AI provider API key is required for the application to work
# 4. You can use any combination of OpenRouter, Gemini, or OpenAI